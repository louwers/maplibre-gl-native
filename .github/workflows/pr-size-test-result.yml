name: pr-size-test-result

on:
  workflow_run:
    workflows: [ios-ci]
    types:
      - completed

jobs:
  comment-on-pr:
    runs-on: ubuntu-22.04
    if: github.event.workflow_run.event == 'pull_request'
    steps:
      # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run
      # TODO: de-duplicate with re-usable action
      - name: 'Download size-test-result artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "size-test-result"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/size-test-result.zip`, Buffer.from(download.data));

      - name: 'Unzip render-test-result artifact'
        run: unzip size-test-result.zip

      - name: Show directory structure
        run: ls -R

      # TODO: leave comment with total size

      # - name: 'Leave comment on PR with test results'
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       let fs = require('fs');
      #       await github.rest.issues.createComment({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         issue_number:  Number(fs.readFileSync('./pr_number')),
      #         body: `Test results at https://maplibre-native-test-artifacts.s3.eu-central-1.amazonaws.com/${context.runId}-linux-gcc8-release-style.html`
      #       });
